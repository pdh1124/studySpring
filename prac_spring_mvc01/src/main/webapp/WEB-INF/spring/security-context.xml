<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 암호화 처리, 사용자 계정 정보 처리 -->
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="customUserDetailsService" 
		class="kr.icia.security.CustomUserDetailsService" />
		<!-- class를 통해서 id의 객체를 생성해 두겠다. -->
	
	
	<security:http>
		<security:intercept-url pattern="/board/list" access="permitAll" />
		<security:intercept-url pattern="/download" access="hasAnyRole('ROLE_USER','ROLE_MEMBER')" />
		
		<security:form-login login-page="/customLogin" />
		
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />
		
		<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me,JSESSIONID" />
	</security:http>
	
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
